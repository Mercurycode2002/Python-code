#Binary Tree Using list

class BT:
    def __init__(self,  data ):
        self.LeftPointer = 0
        self.data = data
        self.RightPointer = 0

def insert(x, y):
    fp = y
    if x > dsBT[fp].data:
        if dsBT[fp].RightPointer == 0:
            dsBT[fp].RightPointer = h
            print("here", fp)
        elif dsBT[fp].RightPointer != 0:
            fp = dsBT[fp].RightPointer
            print("here 2 ", fp)
            insert( x ,fp)
    if x < dsBT[fp].data:
        if dsBT[fp].LeftPointer == 0:
            dsBT[fp].LeftPointer = h
            print("here", fp)
        elif dsBT[fp].LeftPointer != 0:
            fp = dsBT[fp].LeftPointer
            print("here 2 ", fp)
            insert( x ,fp)
dsBT = []
for j in range(7):
    dsBT.append(BT( None))
for h in range(len(dsBT)):
    fp = 0
    # video game name
    vgn = input(str("enter the game's name:\n"))
    dsBT[h].data = vgn
    insert(vgn , 0)
for i in range(len(dsBT)):
    print(dsBT[i].LeftPointer, dsBT[i].data, dsBT[i].RightPointer)

