#Binary Tree Using list

class BT:
    def __init__(self, lp , data , rp):
        self.LeftPointer = lp
        self.data = data
        self.RightPointer = rp
        
        
def insert(x):
    fp = 0
    if dsBT[0].data == None:
        dsBT[0].data = x
    else:
        while x > dsBT[fp].data:
            if dsBT[fp].RightPointer == 0 and x > dsBT[fp].data:
                dsBT[fp].RightPointer = h
                break 
            else:
                while True:
                    fp += 1
                    print("we r here", fp)
                    break
        while x < dsBT[fp].data:
            if dsBT[fp].LeftPointer == 0 and x < dsBT[fp].data :
                dsBT[fp].LeftPointer = h
                break 
            else:
                while True:
                    fp += 1
                    print("somewhere r here", fp)
                    break
        
        
                
            
dsBT = []
for j in range(7):
    dsBT.append(BT( 0 , None , 0 ))
for h in range(len(dsBT)):
    fp = 0
    #video game name
    vgn = input(str("enter the game name:\n"))
    dsBT[h].data = vgn
    insert(vgn)
for i in range(len(dsBT)):
    print(dsBT[i].LeftPointer , dsBT[i].data ,dsBT[i].RightPointer)
